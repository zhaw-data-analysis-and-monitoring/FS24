{
  "hash": "a763ca509ec50bac964e030c16ac277d",
  "result": {
    "markdown": "---\ndate: 2023-11-27\nlesson: RaumAn1\nthema: Spatial Joins\nindex: 2\nexecute: \n  echo: false   # set to true to show musterlösung\n  output: false # set to true to show musterlösung\ncode-fold: true\ncode-summary: \"Musterlösung\"\nknitr:\n  opts_chunk: \n    collapse: true  \n---\n\n\n# Rauman 1: Übung B {#sec-rauman1b}\n\nFür die kommende Übung arbeiten wir mit dem Datensatz *gruental.gpkg*. Importiere ihn in R. Zudem brauchen wir die folgenden libraries:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(\"dplyr\")\nlibrary(\"sf\")\nlibrary(\"ggplot2\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n### Aufgabe 1: Geopackage \"Layers\"\n\nAllenfalls ist euch beim Importieren des Geopackage *gruental.gpkg* folgende Warnmeldung aufgefallen:\n\n```\nWarning message:\nIn evalq((function (..., call. = TRUE, immediate. = FALSE, noBreaks. = FALSE,  :\n  automatically selected the first layer in a data source containing more than one.\n```\n\nDiese Warnmeldung weist darauf hin, dass das Geopackage `gruental.gpkg` mehrere Layers (rep. Datensätze) enthält und nur der erste Layer importiert wurde. Bringe mit dem Befehl `st_layers` die Layer Namen in Erfahrung und nutze diese im Anschluss in `st_read` (als Argument `layer = `) um die layers einzeln zu importieren und in variablen zu speichern (zB in als Variable `wiesen` und `baeume`).\n\n\n::: {.cell}\n\n:::\n\n\n### Aufgabe 2: Datensätze erkunden\n\nNimm dir etwas Zeit und erkunde die beiden Datensätze. Nutze dafür auch die Visualisierungsmöglichkeiten von `ggplot` (insbesondere `geom_sf`). Du kannst mehrere `geom_sf()` übereinander lagern, um gleichzeitig mehrere Datensätze darzustellen.\n\n\n::: {.cell .column-page layout-ncol=\"2\"}\n::: {.cell-output-display}\n![Wiesen-Flächen eingefärbt nach Typ](Rauman1_Uebung_B_files/figure-html/fig-ggplot-ex2-1.png){#fig-ggplot-ex2-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Bäume eingefärbt nach Baumtyp](Rauman1_Uebung_B_files/figure-html/fig-ggplot-ex2-2.png){#fig-ggplot-ex2-2 width=672}\n:::\n:::\n\n\n### Aufgabe 3:  Spatial Join mit Punkten {#sec-spatial-join-points}\n\nWir wollen nun für jeden *Baum* wissen, ob er sich in einer Wiese befindet oder nicht. Dazu nutzen wir die GIS-Technik *Spatial Join*, die in der Vorlesung beschrieben wurde. In `sf` können wir Spatial Joins mit der Funktion `st_join` durchführen, dabei gibt es nur `left` sowie `inner`-Joins (vgl. PrePro 1 & 2). So müssen die Punkte \"Links\", also an erste Stelle aufgeführt werden, da wir ja Attribute *an* die Punkte anheften wollen.\n\nBeachte, dass der Output eine neue Spalte `flaechen_typ` aufweist. Diese ist leer (`NA`) wenn sich der entsprechende Baum nicht in einer Wiese befindet. Wie viele Bäume befinden sich in einer Wiese, wie viele nicht?\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "Rauman1_Uebung_B_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}