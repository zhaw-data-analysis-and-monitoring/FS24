{
  "hash": "953f375ced1c44b66dcd5d389e50d559",
  "result": {
    "markdown": "---\ndate: 2023-11-28\nlesson: RaumAn2\nthema: Vector Data\nindex: 1\nexecute:\n  echo: false   # set to true to show sample solution\n  output: false # set to true to show sample solution\ncode-fold: true\ncode-summary: \"Sample Solution\"\nknitr:\n  opts_chunk:\n    collapse: true  \n---\n\n\n# Rauman 2: Exercise A\n\nIn [the last exercise](#sec-rauman1b), we performed a spatial join between trees and meadows to find out whether a tree is in a meadow or not using data from the Gr√ºental campus (*gruental.gpkg*)\n\nToday we will go a step further and try to answer the following question: *How much meadow is there within 20 metres of each tree?*\n\nTo do this, load the required libraries and records into your session. Explore the data and visualize it spatially.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(\"dplyr\")\nlibrary(\"sf\")\nlibrary(\"ggplot2\")\n\nmeadows <- read_sf(\"datasets/rauman/gruental.gpkg\", \"wiesen\")\ntrees <- read_sf(\"datasets/rauman/gruental.gpkg\", \"baeume\")\n```\n:::\n\n\nIn order to simplify the exercise a little, we will only work with 10 trees at first. Use the code below to randomly select 10 trees. If you use the same \"seed\" as we have` (set.seed(100)`), you should also \"coincidentally\" have the same trees as me.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nset.seed(100)\ntrees_sample <- sample_n(trees, 10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot() +\n  geom_sf(data = meadows) +\n  geom_sf(data = trees_sample)\n```\n\n::: {.cell-output-display}\n![](Rauman2_Uebung_A_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Task 1\n\nAs a first step, we need to apply a 20m buffer to each tree. Use `st_buffer` to save the output as `trees_20m`. Now take a close look at `trees_20m`. What type of geometry does it now represent?\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Trees are displayed as points with a 20m buffer. Meadows are displayed in the background.](Rauman2_Uebung_A_files/figure-html/fig-buffer1-1.png){#fig-buffer1 width=672}\n:::\n:::\n\n\n## Task 2\n\nNow calculate the intersection of `trees_20m` and `meadows` with the `st_intersection` function and save the output as `trees_meadows`. Next explore `trees_meadows`. What happened? Check the number of rows per record. Have they changed? If so, why?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Rauman2_Uebung_A_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Task 3\n\nNow calculate the area per geometry with the `st_area()` function. Save the output in a new column called `trees_meadows` (e.g. with the name `meadow_area`). Tip: Convert the output from `st_area()` to a numeric vector with `as.numeric()`.\n\n\n::: {.cell}\n\n:::\n\n\n## Task 4 (Optional)\n\nNow calculate the `meadow_share` from `meadow_area`. Tip: The circular area of $r^2\\times \\pi$ is 100%, whereas in our case, $r = $20.\n\n\n::: {.cell}\n\n:::\n\n\nThen transfer the calculated proportional values to the `trees` dataset with a `left_ join()` between `trees` and `trees_meadows`. Which column would be suitable for this join? Note: Use `st_drop_geometry()` to remove the geometry column in `trees_meadows` before joining.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![After this exercise, you can visualise the results like this.](Rauman2_Uebung_A_files/figure-html/fig-ggplot-ex4-1.png){#fig-ggplot-ex4 width=672}\n:::\n:::\n\n\n## Task 5 {#sec-raster-intro1}\n\nBy now you have performed a few vector operations such as `st_buffer()` and `st_intersection()` and `st_area()`. However, certain questions are better answered using the raster format. For example, if we want to know how far the nearest tree is for each point in the room, this can be better represented in a raster.\n\nHowever, before we can answer that question, we have to convert the vector data set into a raster data set. To do this, a raster \"template\" is needed so that R knows roughly what the raster output should look like.\n\n\n::: {.cell}\n\n:::\n\n\nThe difference between raster and vector can be shown very vividly if the two data sets are stored one on top of the other.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Rauman2_Uebung_A_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n we can now use the function `distance()` with `trees_rast` to calculate the distance to each tree:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Rauman2_Uebung_A_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Rauman2_Uebung_A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}