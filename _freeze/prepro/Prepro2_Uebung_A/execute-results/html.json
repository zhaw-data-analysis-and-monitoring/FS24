{
  "hash": "e0b23f4f79b5fe930b4fab985650fd9b",
  "result": {
    "markdown": "---\ndate: 2024-02-27\nlesson: PrePro2\ntopic: Piping / Joins\nindex: 2\nexecute:\n  echo: true # set to true to show sample solution\n  output: true # set to true to show sample solution\ncode-fold: true\ncode-summary: \"Sample Solution\"\nknitr:\n  opts_chunk:\n    collapse: true\n---\n\n\n# Prepro 2: Exercise A\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(\"dplyr\")\nlibrary(\"readr\")\nlibrary(\"lubridate\")\n\n# Alternatively, you can load all tidyverse packages with library(\"tidyverse\")\n```\n:::\n\n\n## Task 1\n\nRead the weather data from last week *weather.csv* (source MeteoSchweiz) into `R`. Make sure that the columns are formatted correctly (`stn` as a `factor`, `time` as `POSIXct`, `tre200h0` as a `numeric`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Option 1\nweather <- read_delim(\"datasets/prepro/weather.csv\", \",\")\nweather$stn <- as.factor(weather$stn)\nweather$time <- as.POSIXct(as.character(weather$time), format = \"%Y%m%d%H\", tz = \"UTC\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Option 2 (for pros)\nweather <- read_csv(\"datasets/prepro/weather.csv\",\n  col_types = cols(\n    col_factor(levels = NULL),\n    col_datetime(format = \"%Y%m%d%H\"),\n    col_double()\n  )\n)\n```\n:::\n\n\n## Task 2\n\nRead in the *metadata.csv* dataset as a csv.\n\n:::{.callout-tip}\nIf umlauts and special characters are not displayed correctly (e.g. the *è* in Gèneve), this probably has something to do with the [character encoding](https://de.wikipedia.org/wiki/Zeichenkodierung). The file is currently encoded in *UTF-8*. If special characters are not correctly displayed, R has not recognised this coding and it must be specified in the import function. How this is done depends on the import function used:\n\n- Package functions: `readr`: `locale = locale(encoding = \"UTF-8\")`\n- Base-R functions: `fileEncoding = \"UTF-8\"`\n\nIf you do *not* know how a file is encoded, the following instructions for [Windows](https://stackoverflow.com/a/13464816/4139249), [Mac](https://stackoverflow.com/a/2461193/4139249) and [Linux](https://stackoverflow.com/a/805474/4139249) will help:\n::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata <- read_delim(\"datasets/prepro/metadata.csv\", delim = \";\", locale = locale(encoding = \"UTF-8\"))\n```\n:::\n\n\n## Task 3\n\nNow we want to enrich the `weather` data set with information from `metadata`. However, we are only interested in the station abbreviation, the name, the x/y coordinates and the sea level. Select these columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata <- metadata[, c(\"stn\", \"Name\", \"x\", \"y\", \"Meereshoehe\")]\n```\n:::\n\n\n## Task 4\n\nNow the `metadata` can be connected to the `weather` data set. Which join should we use to do this? And, which attribute can we join?\n\nUse the join options in `dplyr` (help via`? dplyr::join`)  to connect the `weather` data set and the `metadata`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- left_join(weather, metadata, by = \"stn\")\n\n# Join type: Left-Join on 'weather', as we are only interested in the stations in the 'weather' dataset.\n# Attribute: \"stn\"\n```\n:::\n\n\n## Task 5\n\nCreate a new `month` column (from `time`). To do this, use the `lubridate::month()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather$month <- month(weather$time)\n```\n:::\n\n\n## Task 6\n\nUse the `month` column to calculate the average temperature per month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(weather$tre200h0[weather$month == 1])\n## [1] -1.963239\nmean(weather$tre200h0[weather$month == 2])\n## [1] 0.3552632\nmean(weather$tre200h0[weather$month == 3])\n## [1] 2.965054\n\n# etc. for all 12 months\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}