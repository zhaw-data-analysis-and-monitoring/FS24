{
  "hash": "1b8d9b6aea86c5c17bf60aa9ba9a6aac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ndate: 2024-02-27\nlesson: PrePro2\ntopic: Piping / Joins\nindex: 1\nknitr:\n  opts_chunk:\n    collapse: true\n---\n\n\n# Prepro 2: Demo\n\nThe code for this demo can also [be downloaded as an R Script](Prepro2_Demo.R) (right click → *Save Target As..*)\n\n## Piping\n\nWe want to extract the temperature data from a character string (`temperature`), and then convert the Kelvin value into Celsius according to the following formula, before finally calculating the mean of all the values:\n\n$$°C = K - 273.15$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# these temperature are in Kelvin:\ntemperature <- c(\"310\",\"322\",\"348\")\n\ntemperature\n## [1] \"310\" \"322\" \"348\"\n```\n:::\n\n\n\nTranslated into R-code, this results in the following operation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nsubtract <- function(x,y){x-y} # helperfunction to subtract y from x\n\noutput <- mean(subtract(as.integer(temperature), 273.15))\n#                             \\_1_/\n#                       \\_______2_____________/\n#              \\________________3______________________/\n#         \\_____________________4_______________________/\n\n# 1. Take temperature\n# 2. Convert \"character\" → \"integer\"\n# 4. Subtract 273.15\n# 5. Calculate the mean\n```\n:::\n\n\nThe whole operation is easier to read if it is written down sequentially:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp <- as.integer(temperature)   # 2\ntmp <- subtract(tmp, 273.15)     # 3\noutput <- mean(tmp)              # 4\noutput\n## [1] 53.51667\n```\n:::\n\n\nThe fact that the intermediate results must always be saved and retrieved again in the subsequent operation makes this somewhat cumbersome. This is where \"piping\" comes into play: *It makes the output of one function the first parameter of the subsequent function.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemperature |>        # 1\n  as.integer() |>     # 2\n  subtract(273.15) |> # 3\n  mean()              # 4\n## [1] 53.51667\n```\n:::\n\n\n:::{.callout-important}\n- the `|>` pipe operator was first introduced in R `4.1`\n- In addition to the *base R* pipe operator, there is also a very similar[^pipe] pipe operator, `%>%`, in the `magrittr` package.\n- The <kbd>Ctrl</kbd> +<kbd>Shift</kbd>+<kbd>M</kbd> keyboard shortcut in RStudio inserts a pipe operator.\n- By checking the Use native pipe operator setting in RStudio Settings `Tools` → `Global Options` → `Code`, you can control which `pipe operator`, `|>` or `%>%`, is inserted with the above key combination.\n- We recommend using the base-R pipe operator `|>`\n:::\n\n[^pipe]: see <https://stackoverflow.com/q/67633022/4139249>\n\n## Joins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudents <- data.frame(\n  Matriculation_No = c(100002, 100003, 200003),\n  Student = c(\"Patrick\", \"Manuela\", \"Eva\"),\n  ZIP = c(8006, 8001, 8820)\n)\n\nstudents\n##   Matriculation_No Student  ZIP\n## 1           100002 Patrick 8006\n## 2           100003 Manuela 8001\n## 3           200003     Eva 8820\n\nlocalities <- data.frame(\n  ZIP = c(8003, 8006, 8810, 8820),\n  LocalityName = c(\"Zurich\", \"Zurich\", \"Horgen\", \"Wadenswil\")\n)\n\nlocalities\n##    ZIP LocalityName\n## 1 8003       Zurich\n## 2 8006       Zurich\n## 3 8810       Horgen\n## 4 8820    Wadenswil\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load library\nlibrary(\"dplyr\")\n\ninner_join(students, localities, by = \"ZIP\")\n##   Matriculation_No Student  ZIP LocalityName\n## 1           100002 Patrick 8006       Zurich\n## 2           200003     Eva 8820    Wadenswil\n\nleft_join(students, localities, by = \"ZIP\")\n##   Matriculation_No Student  ZIP LocalityName\n## 1           100002 Patrick 8006       Zurich\n## 2           100003 Manuela 8001         <NA>\n## 3           200003     Eva 8820    Wadenswil\n\nright_join(students, localities, by = \"ZIP\")\n##   Matriculation_No Student  ZIP LocalityName\n## 1           100002 Patrick 8006       Zurich\n## 2           200003     Eva 8820    Wadenswil\n## 3               NA    <NA> 8003       Zurich\n## 4               NA    <NA> 8810       Horgen\n\nfull_join(students, localities, by = \"ZIP\")\n##   Matriculation_No Student  ZIP LocalityName\n## 1           100002 Patrick 8006       Zurich\n## 2           100003 Manuela 8001         <NA>\n## 3           200003     Eva 8820    Wadenswil\n## 4               NA    <NA> 8003       Zurich\n## 5               NA    <NA> 8810       Horgen\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstudents <- data.frame(\n  Matriculation_No = c(100002, 100003, 200003),\n  Student = c(\"Patrick\", \"Manuela\", \"Pascal\"),\n  Residence = c(8006, 8001, 8006)\n)\n\nleft_join(students, localities, by = c(\"Residence\" = \"ZIP\"))\n##   Matriculation_No Student Residence LocalityName\n## 1           100002 Patrick      8006       Zurich\n## 2           100003 Manuela      8001         <NA>\n## 3           200003  Pascal      8006       Zurich\n```\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}