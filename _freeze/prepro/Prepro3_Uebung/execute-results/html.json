{
  "hash": "1bdc6e76f365ad31b57ea5fc3953f35b",
  "result": {
    "markdown": "---\ndate: 2023-10-17\nlesson: PrePro3\nTopic: Split-Apply-Combine\nindex: 2\nexecute:\n  echo: false   # set to true to show sample solution\n  output: false # set to true to show sample solution\ncode-fold: true\ncode-summary: \"Sample Solution\"\nknitr:\n  opts_chunk:\n    collapse: true\n---\n\n\n# Prepro 3: Exercise\n\n## Task 1\n\nYou have a dataset, *sensors_combined.csv*, with temperature values from three different sensors. Import it as a csv into R (as `sensors_combined`).\n\nReformat the `datetime` column to `POSIXct`. Use the `as.POSIXct` function (read it in using`?strftime())` to determine the specific format (the template).\n\n\n::: {.cell}\n\n:::\n\n\n## Task 2\n\nConvert the table to a *long* format (use the `pivot_longer` function from `tidyr`) and save the output as `sensors_long`.\n\nTips:\n\n- In the `cols` argument, you can list the columns that should be pivoted.\n- Alternatively, you can indicate (by placing a minus sign in front, `-`) the column that should *not* be pivoted.\n- In either case, you do not need to put the columns in quotation marks or end them with the `$`sign.\n\n\n::: {.cell}\n\n:::\n\n\n## Task 3\n\nGroup `sensors_long` according to the new column where the sensor information is contained (default: `name`) with `group_by` and calculate the average temperature for each sensor (`summarise`). Note: Both functions are part of the `dplyr` package.\n\nThe output will look like this:\n\n\n::: {.cell}\n\n```\n## # A tibble: 3 Ã— 2\n##   name    temp_mean\n##   <chr>       <dbl>\n## 1 sensor1      14.7\n## 2 sensor2      12.0\n## 3 sensor3      14.4\n```\n:::\n\n\n## Task 4\n\nCreate a new *convenience* variable, `month`, for `sensors_long` (Tip: use the `month` function from `lubridate`). Now group by `month` *and* sensor and calculate the mean temperature.\n\n\n::: {.cell}\n\n:::\n\n\n## Task 5\n\nNow download the *weather.csv* dataset (source MeteoSwiss) and import it as a .csv with the correct column types (`stn` as a `factor`, `time` as `POSIXct`, `tre200h0` as `double`).\n\n\n::: {.cell}\n\n:::\n\n\n## Task 6\n\nNow create a *convenience variable* for the calendar week for each measurement (`lubridate::isoweek`). Then calculate the average temperature value for each calendar week.\n\n\n::: {.cell}\n\n:::\n\n\nNext visualise the result:\n\n\n![](Prepro3_Uebung_files/figure-html/unnamed-chunk-7-1.png){width=672}\n\n\n## Task 7\n\nIn the previous task, we calculated the average temperature per calendar week over *all years* (2000 and 2001). However, if we want to compare the years with each other, we have to create the year as an additional *convenience variable* and group it accordingly. Try this with the weather data and then visualise the output.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Base plot does not like long tables and makes a continuous line out of the two years](Prepro3_Uebung_files/figure-html/fig-baseplot-ex7-1.png){#fig-baseplot-ex7 width=672}\n:::\n:::\n\n\n## Task 8\n\nTransfer the output from the last exercise to a *wide table*. Now the two years can be compared much more easily.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](Prepro3_Uebung_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Prepro3_Uebung_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}