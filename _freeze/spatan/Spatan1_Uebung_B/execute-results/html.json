{
  "hash": "2ba5321defeeebf89ecb4cdbb661fc78",
  "result": {
    "engine": "knitr",
    "markdown": "---\ndate: 2024-04-30\nlesson: SpatAn1\ntopic: Spatial Joins\nindex: 2\nexecute:\n  echo: false # set to true to show sample solution\n  output: false # set to true to show sample solution\ncode-fold: true\ncode-summary: \"Sample Solution\"\nknitr:\n  opts_chunk:\n    collapse: true  \n---\n\n\n# SpatAn 1: Exercise B {#sec-spatan1b}\n\nFor the upcoming exercise, we will work with the *gruental.gpkg*. data set. Import it into R. We also need the following libraries:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(\"dplyr\")\nlibrary(\"sf\")\nlibrary(\"ggplot2\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n### Task 1: Geopackage \"Layers\"\n\nYou may have noticed the following warning message when importing the *gruental.gpkg* geopackage:\n\n```\nWarning message:\nIn evalq((function (..., call. = TRUE, immediate. = FALSE, noBreaks. = FALSE,  :\n  automatically selected the first layer in a data source containing more than one.\n```\n\nThis warning message indicates that the geopackage `gruental.gpkg` has several layers (rep. records) and only the first layer has been imported. Use the `st_layers` command to find out the layer names and then use them in `st_read` (as argument `layer =`) to import the layers individually and store them in variables (e.g., such as in the variables `wiesen` and `baeume`).\n\n\n::: {.cell}\n\n:::\n\n\n### Task 2: Understanding the data sets\n\nTake some time to explore the two datasets. Use the visualisation options of `ggplot` (especially `geom_sf`). You can superimpose multiple `geom_sf` to represent multiple records at the same time.\n\n\n::: {.cell .column-page layout-ncol=\"2\"}\n::: {.cell-output-display}\n![Meadow areas are shown in different colours depending on type](Spatan1_Uebung_B_files/figure-html/fig-ggplot-ex2-1.png){#fig-ggplot-ex2-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Trees are shown in different colours depending on type](Spatan1_Uebung_B_files/figure-html/fig-ggplot-ex2-2.png){#fig-ggplot-ex2-2 width=672}\n:::\n:::\n\n\n### Task 3:  Spatial join with points {#sec-spatial-join-points}\n\nWe now want to know whether each *tree* is in a meadow or not. To do this, we use the GIS technique *spatial join* as described in the lecture. Using `sf`, we can perform spatial joins with `st_join`. There are only `left` and `innerjoins` (see PrePro 1 & 2). The \"links\" points must be listed first, since we want to attach attributes *to* the points.\n\nNote that the output has a new column: `flaechen_typ`. This is empty (`NA`) if the corresponding tree is not in a meadow. How many trees are in a meadow and how many are not?\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "Spatan1_Uebung_B_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}