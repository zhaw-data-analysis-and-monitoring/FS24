{
  "hash": "d53eba8a0c8743c5fc67d395714e1013",
  "result": {
    "markdown": "---\ndate: 2023-10-23\nlesson: InfoVis1\nthema: Plots & Facets\nindex: 3\nexecute:\n  echo: false   # set to true to show sample solution\n  output: false # set to true to show sample solution\ncode-fold: true\ncode-summary: \"Sample Solution\"\nknitr:\n  opts_chunk:\n    collapse: true\n---\n\n\n# Infovis 1: Exercise\n\nThis exercise involves recreating the graphics from the @kovic2014 blog post. Since the original blog post is no longer available, we’ve hosted a copy on the following website:\n\n<https://researchmethods-zhaw.github.io/blog.tagesanzeiger.ch/>\n\nPlease review the graphics in the blog post. The default settings for `ggplot2` were used in the blog post, which makes recreating the graphics easier. The links in the text refer to the original graphics, while the embedded plots have been recreated.\n\nFirst, let’s import the dataset *tagi_data_kanton.csv*.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(\"dplyr\")\nlibrary(\"ggplot2\")\nlibrary(\"readr\")\n\ncanton <- read_delim(\"datasets/infovis/tagi_data_kantone.csv\", \",\")\n```\n:::\n\n\n## Task 1\n\nYour first task is to recreate the following plot from @kovic2014 using ggplot and the *tagi_data_kanton.csv* dataset:\n\nHere’s are some tips to get you started:\n\n- Create a `ggplot` object with `ggplot(canton, aes(auslanderanteil, ja_anteil))`, then add a point layer with `geom_point()`.\n- Use `coord_fixed()` to set a fixed ratio (1:1) between the axes.\n- Optionally, you can:\n   - Set the axis start and end values with `scale_y_continuous` or `scale_x_continuous`.\n   - Manually set the `breaks` (0.0, 0.1…0.7) within `scale_*_continuous` as in @kovic2014.\n   - Use `labs()` to label the axes.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis1_Uebung_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## Task 2\n\nNext, replicate the following plot from @kovic2014 using ggplot:\n\nHere’s a tip:\n\n- Use `geom_smooth`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis1_Uebung_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Task 3\n\nNow, let’s import the municipal data *tagi_data_gemeinden.csv*.\n\nReplicate the following plot from @kovic2014 using ggplot and the *tagi_data_gemeinden.csv* dataset:\n\nHere are some tips:\n\n- Use `geom_point()`.\n- Use `labs().`\n- Use `coord_fixed()`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis1_Uebung_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Task 4\n\nReplicate the following plot from @kovic2014 using ggplot and the *tagi_data_gemeinden.csv* dataset:\n\nHere’s a tip:\n\n- Use `geom_smooth`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis1_Uebung_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Task 5\n\nReplicate the following plot from @kovic2014 using ggplot and the *tagi_data_gemeinden.csv* dataset:\n\nHere’s a tip:\n\n- Use `facet_wrap` to display a separate plot for each canton.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis1_Uebung_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Task 6\n\nReplicate the following plot from @kovic2014 using ggplot and the *tagi_data_gemeinden.csv* dataset:\n\nHere’s a tip:\n\n- Use `geom_smooth`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis1_Uebung_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Task 7\n\nReplicate the following plot from @kovic2014 using ggplot and the *tagi_data_gemeinden.csv* dataset:\n\nHere’s a tip:\n\n- Use `facet_wrap`\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis1_Uebung_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Task 8\n\nReplicate the following plot from @kovic2014 using ggplot and the *tagi_data_gemeinden.csv* dataset:\n\nHere’s a tip:\n\n- Use `geom_smooth`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis1_Uebung_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Infovis1_Uebung_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}