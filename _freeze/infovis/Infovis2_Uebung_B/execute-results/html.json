{
  "hash": "d671643a41cefd56cb57970a891cd7f1",
  "result": {
    "markdown": "---\ndate: 2024-03-26\nlesson: InfoVis2\ntopic: Advanced ggplot\nindex: 2\nexecute:\n  echo: false   # set to true to show the sample solution\n  output: false # set to true to show the sample solution\ncode-fold: true\ncode-summary: \"Sample Solution\"\nknitr:\n  opts_chunk:\n    collapse: true\n---\n\n\n# Infovis 2: Exercise B (Optional)\n\nIn this exercise, we’ll recreate some of the more advanced or specialised plots from the lecture. For this purpose, we’ll use datasets that are already integrated into R. You can find a list of these datasets [here](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/00Index.html) or with the help `?datasets`.\n\nWe’ll continue to use `ggplot2`, but with a few tricks.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(\"dplyr\")\nlibrary(\"tidyr\")\nlibrary(\"ggplot2\")\n```\n:::\n\n\n## Task 1: Parallel Coordinate Plots\n\nCreate a [parallel coordinate plot](https://en.wikipedia.org/wiki/Parallel_coordinates). For this, the integrated dataset [`mtcars`](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/mtcars.html) is suitable. Extract the vehicle names with `rownames_to_column`.\n\nAlso, the values need to be normalised to a common scale. For this, you can use the function `scales::rescale`.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nHere’s what the finished plot looks like:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis2_Uebung_B_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Task 2: Polar Plot with Beaver Data\n\nPolar plots are suitable for data of a cyclical nature, such as time-stamped data (daily, weekly, or annual rhythms). From the example datasets, I found two datasets that are time-stamped:\n\n- [`beaver1` and `beaver2`](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/beavers.html)\n- [`AirPassenger`](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/AirPassengers.html)\n\nBoth datasets need to be reshaped a bit before we can use them for a radial plot. In task 2, we'll use the beaver datasets, and in task 3 we'll use the passenger datasets.\n\nIf we want to use the data from both beavers, we need to merge them.\n\n\n::: {.cell}\n\n:::\n\n\nWe also need to make some adjustments to the time data. According to the [dataset’s description](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/beavers.html), time has been recorded in a format that isn’t very intuitive for programming purposes. For instance, 3:30 has been recorded as “0330”. To make this data more manageable, we’ll need to convert this time format into a decimal system.\n\n\n::: {.cell}\n\n:::\n\n\nHere’s what the finished plot should look like:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis2_Uebung_B_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Task 3: Grid Visualisation with Air Passengers\n\nSimilar to task 2, this time we’ll use the [`AirPassengers`](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/AirPassengers.html) dataset.\n\nThe `AirPassengers` dataset is in a unique format. At first glance, it might seem like a `data.frame` or a `matrix`. However, it’s actually a [`ts`](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/ts.html) class object\n\n\n::: {.cell}\n\n:::\n\n\nTo use this dataset, we first need to convert it into a `matrix`. I learned how to do this [here](https://stackoverflow.com/a/5332664/4139249).\n\n\n::: {.cell}\n\n:::\n\n\nWe also need to convert the `matrix` into a dataframe, and to transform the wide table into a long table.\n\n\n::: {.cell}\n\n:::\n\n\nHere’s what the finished plot looks like:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Infovis2_Uebung_B_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Infovis2_Uebung_B_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}